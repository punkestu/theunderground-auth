// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Jwt is an autogenerated mock type for the Jwt type
type Jwt struct {
	mock.Mock
}

// Sign provides a mock function with given fields: payload
func (_m *Jwt) Sign(payload interface{}) string {
	ret := _m.Called(payload)

	var r0 string
	if rf, ok := ret.Get(0).(func(interface{}) string); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Validate provides a mock function with given fields: token
func (_m *Jwt) Validate(token string) bool {
	ret := _m.Called(token)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(token)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewJwt creates a new instance of Jwt. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewJwt(t interface {
	mock.TestingT
	Cleanup(func())
}) *Jwt {
	mock := &Jwt{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
